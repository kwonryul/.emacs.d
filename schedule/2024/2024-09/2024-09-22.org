* Daily
** TODO InvestWith
*** TODO ifs-fe
**** vue 공식 문서
***** Essentials
- [ ] Watchers
- [ ] Template Refs
- [ ] Components Basics
***** Components In-Depth
- [ ] Registration
- [ ] Props
- [ ] Events
- [ ] Component v-model
- [ ] Fallthrough Attributes
- [ ] Slots
- [ ] Provide / Inject
- [ ] Async Component
*** DONE utopia-lite
**** reframe 공식 문서
***** THE BASICS
- [X] A Data Loop
- [X] State
- [X] Code
- [X] Infographics
- [X] Subscriptions
- [X] Live
***** INTERMIDIATE 2 & 3
- [X] Effectful Handlers
- [X] Interceptors
- [X] Effects
- [X] Coeffects
- [X] Flows
- [X] Review TodoMVC
***** INTERMIDIATE 4, 5 & 6
- [X] Correcting a wrong
- [X] Flow Mechanics
* Tasks
** emacs
- [ ] init.org
- [ ] open-api yaml snippet
** InvestWith
*** ifs-be
- [ ] 마이크로소프트 로그인
- [ ] ibs-be와 백엔드 연결 (유저데이터)
*** ifs-fe
- [ ] init project
- [ ] aws
**** vue 공식문서
***** Reusability
- [ ] Composables
- [ ] Custom Directives
- [ ] Plugins
***** Built-in Components
- [ ] Transition
- [ ] Transition Group
- [ ] KeepAlive
- [ ] Teleport
- [ ] Suspense
***** Scaling Up
- [ ] Single-File Components
- [ ] Tooling
- [ ] Routing
- [ ] State Management
- [ ] Testing
- [ ] Server-Side Rendering (SSR)
***** Best Practices
- [ ] Production Deployment
- [ ] Performance
- [ ] Accessibility
- [ ] Security
***** TypeScript
- [ ] Overview
- [ ] TS with Composition API
- [ ] TS with Options API -> 이거는 생략 예정
***** Extra Topics
- [ ] Ways of Using Vue
- [ ] Composition API FAQ
- [ ] Reactivity in Depth
- [ ] Rendering Mechanism
- [ ] Render Functions & JSX
- [ ] Vue and Web Components
- [ ] Animation Techniques
*** ifs-py
**** fast-api 공식문서 기본 (Middleware 부터)
**** fast-api 공식문서 심화
*** ibs-be
*** ibs-fe
** Computer Networking
*** 3. 트랜스포트 계층
- [ ] 3.5. 연결지향형 트랜스포트: TCP
- [ ] 3.6. 혼잡제어의 원리
- [ ] 3.7. TCP 혼잡제어
- [ ] 3.8. 요약
** 타입스크립트 프로그래밍
*** 01. 타입스크립트와 개발 환경 만들기
- [ ] 01-1. 타입스크립트란 무엇인가?
- [ ] 01-2. 타입스크립트 주요 문법 살펴보기
- [ ] 01-3. 타입스크립트 개발 환경 만들기
*** 02. 타입스크립트 프로젝트 생성과 관리
- [ ] 02-1. 타입스크립트 프로젝트 만들기
- [ ] 02-2. 모듈 이해하기
- [ ] 02-3. tsconfig.json 파일 살펴보기
*** 03. 객체와 타입
- [ ] 03-1. 타입스크립트 변수 선언문
- [ ] 03-2. 객체와 인터페이스
- [ ] 03-3. 객체와 클래스
- [ ] 03-4. 객체의 비구조화 할당문
- [ ] 03-5. 객체의 타입 변환
** Category Theory for Programmers
** Structure and Interpretation of Programs
** The Joy of Clojure
** CUDA C Programming
** 밑바닥부터 시작하는 딥러닝
** 밑바닥부터 시작하는 딥러닝 2
** 밑바닥부터 시작하는 딥러닝 3
** 핸즈온 머신러닝
